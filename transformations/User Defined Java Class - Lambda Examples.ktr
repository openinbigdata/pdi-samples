<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>User Defined Java Class -  Lambda Examples</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection/>
        <schema/>
        <table/>
        <size_limit_lines/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2018/05/23 10:09:16.870</created_date>
    <modified_user>-</modified_user>
    <modified_date>2018/05/23 10:09:16.870</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>dg: DataGenerator</from>
      <to>udjc: LambdaWorkArounds</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>udjc: LambdaWorkArounds</from>
      <to>wlog: GoPath</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>udjc: LambdaWorkArounds</from>
      <to>wlog: ErrorPath</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>dg: DataGenerator</name>
    <type>DataGrid</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>testNumber</name>
        <type>Number</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>testString</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>numberList</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <data>
      <line>
        <item>1</item>
        <item>One, Two, Three, Four, Five</item>
        <item>1, 2, 3, 4, 5</item>
      </line>
      <line>
        <item>2</item>
        <item>One, Two, Three, Four, Five</item>
        <item>1, 2, 3, 4, 5</item>
      </line>
      <line>
        <item>3</item>
        <item>One, Two, Three, Four, Five</item>
        <item>1, 2, 3, 4, 5</item>
      </line>
      <line>
        <item>4</item>
        <item>One, Two, Three, Four, Five</item>
        <item>1, 2, 3, 4, 5</item>
      </line>
      <line>
        <item>5</item>
        <item>One, Two, Three, Four, Five</item>
        <item>1, 2, 3, 4, 5</item>
      </line>
      <line>
        <item>6</item>
        <item>One, Two, Three, Four, Five</item>
        <item>1, 2, 3, 4, 5</item>
      </line>
      <line>
        <item>7</item>
        <item>One, Two, Three, Four, Five</item>
        <item>1, 2, 3, 4, 5</item>
      </line>
      <line>
        <item>8</item>
        <item>One, Two, Three, Four, Five</item>
        <item>1, 2, 3, 4, 5</item>
      </line>
      <line>
        <item>9</item>
        <item>One, Two, Three, Four, Five</item>
        <item>1, 2, 3, 4, 5</item>
      </line>
      <line>
        <item>10</item>
        <item>One, Two, Three, Four, Five</item>
        <item>1,2,3,4,A</item>
      </line>
    </data>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>112</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>udjc: LambdaWorkArounds</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>N</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <definitions>
      <definition>
        <class_type>TRANSFORM_CLASS</class_type>
        <class_name>Processor</class_name>
        <class_source>import java.util.List;
import java.util.stream.Collectors;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.Optional;
import java.util.Comparator;
import java.lang.String;
import java.util.ArrayList;
import java.util.Arrays;

// The purpose of this class "Processor" is to show how to use streaming with
// Janino compiler (https://janino-compiler.github.io/janino/) which does not support lambdas. 

// Shows how to implement a class that replaces the filter lambda: .filter( str -> str.startsWith( "T" ) 
public class TFilter implements Predicate {
	public boolean test( Object obj ) {
    		return obj.toString().startsWith( "T" );
    }
}

// Shows how to implement a class that replaces the map lambda: .map( String::toUpperCase )
public class UpperCase implements Function {
    public Object apply( Object obj ) {
          String upper = obj.toString().toUpperCase();
    return upper;
    }
}

// Shows how to implement a class that replaces map lambda: .map( str -> Integer.valueOf( str ) )
public class ToInteger implements Function {
    public Object apply( Object obj ) {
          Integer value = new Integer( obj.toString() );
    return value;
    }
}

// Shows how to implement a class that replaces the sort lambda: .sorted( ( obj1, obj2 ) -> ((Integer)obj1).compareTo((Integer)obj2) )
public class NormalCase implements Comparator {
	public int compare( Object obj1, Object obj2 ) {
       int res = ((Integer)obj1).compareTo((Integer)obj2);
       return res;
    }
}

// Shows how to implement a class that replaces the sort lambda: 
// .sorted( ( obj1, obj2) -> {
//          int res = ((Integer)obj1).compareTo((Integer)obj2);
//          if ( res != 0 )
//            res = res * -1;
//          return res; 
//          } ) 
public class ReverseCase implements Comparator {
	public int compare( Object obj1, Object obj2 ) {
       int res = ((Integer)obj1).compareTo((Integer)obj2);
       if ( res != 0 )
         res = res * -1;
       return res;
    }
}


public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
    int valueIndex = -1;
	Object[] row = getRow();
    boolean rowInError = false;
    String errMsg = "";
    int errCnt = 0;
   
    // Return false when finished processing input rows.
	if ( row == null ) {
		setOutputDone();
		return false;
	}

    if ( first ){
 		first = false;
	}

    // Get the output row
	Object[] outputRowData = RowDataUtil.createResizedCopy( row, data.outputRowMeta.size() );

    // Convert the strings in testString "One, Two, ..."  to upper case "ONE, TWO, ..."
    String testString = get( Fields.In, "testString" ).getString( row );    		
    String[] strs = testString.split( ", " );
    List strsList = Arrays.asList( strs );
    	Object ucList = strsList.stream()
						.map( new UpperCase() )
						.collect( Collectors.toList() );
    	get( Fields.Out, "upperCase" ).setValue( row, ucList.toString() );

    // Filter the testString on strings that start with "T"
    ucList = strsList.stream()
            		.filter( new TFilter() )
                 .collect( Collectors.toList() );
    get( Fields.Out, "startsWithTFilterCase" ).setValue( row, ucList.toString() );


    // Sort the numbered list in reverse order and capture anything
    // that can not be converted to integer. 
    String numberList = get( Fields.In, "numberList" ).getString( row ); 
    strs = numberList.split( ", " );
    strsList = Arrays.asList( strs );

    try {

    Object 	numList = strsList.stream()
                   	 	.map( new ToInteger() )
                     	.sorted( new ReverseCase() )
                     	.collect( Collectors.toList() );

    	get( Fields.Out, "reverseOrder" ).setValue( row, numList.toString() );

    } catch (NumberFormatException ex) {
        // Number List contains a value that cannot be converteds to an Integer.
        rowInError = true;
        errMsg = ex.getMessage();
        errCnt = errCnt + 1;
    }

    if ( !rowInError ) {
        putRow( data.outputRowMeta, row );
    } else {
        // Output errors to the error hop. Right click on step and choose "Error Handling..."
		putError(data.outputRowMeta, row, errCnt, errMsg, "Not allowed", "DEC_0");
    }

    // Return true to represent we have not finsh processing all of the input rows
    // yet.
	return true;
}</class_source>
      </definition>
    </definitions>
    <fields>
      <field>
        <field_name>upperCase</field_name>
        <field_type>String</field_type>
        <field_length>-1</field_length>
        <field_precision>-1</field_precision>
      </field>
      <field>
        <field_name>startsWithTFilterCase</field_name>
        <field_type>String</field_type>
        <field_length>-1</field_length>
        <field_precision>-1</field_precision>
      </field>
      <field>
        <field_name>reverseOrder</field_name>
        <field_type>String</field_type>
        <field_length>-1</field_length>
        <field_precision>-1</field_precision>
      </field>
    </fields>
    <clear_result_fields>N</clear_result_fields>
    <info_steps/>
    <target_steps>
      <target_step>
        <step_tag>output</step_tag>
        <step_name>wlog: GoPath</step_name>
        <step_description/>
      </target_step>
      <target_step>
        <step_tag>error</step_tag>
        <step_name>wlog: ErrorPath</step_name>
        <step_description/>
      </target_step>
    </target_steps>
    <usage_parameters/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>288</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>wlog: ErrorPath</name>
    <type>WriteToLog</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <loglevel>log_level_basic</loglevel>
    <displayHeader>Y</displayHeader>
    <limitRows>N</limitRows>
    <limitRowsNumber>0</limitRowsNumber>
    <logmessage/>
    <fields>
      <field>
        <name>testNumber</name>
      </field>
      <field>
        <name>testString</name>
      </field>
      <field>
        <name>numberList</name>
      </field>
      <field>
        <name>nrErrors</name>
      </field>
      <field>
        <name>errDesc</name>
      </field>
      <field>
        <name>errFields</name>
      </field>
      <field>
        <name>errCode</name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>288</xloc>
      <yloc>208</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>wlog: GoPath</name>
    <type>WriteToLog</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <loglevel>log_level_basic</loglevel>
    <displayHeader>Y</displayHeader>
    <limitRows>N</limitRows>
    <limitRowsNumber>0</limitRowsNumber>
    <logmessage/>
    <fields>
      <field>
        <name>testNumber</name>
      </field>
      <field>
        <name>testString</name>
      </field>
      <field>
        <name>numberList</name>
      </field>
      <field>
        <name>upperCase</name>
      </field>
      <field>
        <name>startsWithTFilterCase</name>
      </field>
      <field>
        <name>reverseOrder</name>
      </field>
    </fields>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>480</xloc>
      <yloc>80</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
    <error>
      <source_step>udjc: LambdaWorkArounds</source_step>
      <target_step>wlog: ErrorPath</target_step>
      <is_enabled>Y</is_enabled>
      <nr_valuename>nrErrors</nr_valuename>
      <descriptions_valuename>errDesc</descriptions_valuename>
      <fields_valuename>errFields</fields_valuename>
      <codes_valuename>errCode</codes_valuename>
      <max_errors/>
      <max_pct_errors/>
      <min_pct_rows/>
    </error>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
  <attributes>
    <group>
      <name>explorerState</name>
    </group>
  </attributes>
</transformation>
